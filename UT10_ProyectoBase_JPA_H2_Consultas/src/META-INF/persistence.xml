<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.1" xmlns="http://xmlns.jcp.org/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd">
  <persistence-unit name="EjemplosJPA" transaction-type="RESOURCE_LOCAL">
    <provider>org.eclipse.persistence.jpa.PersistenceProvider</provider>
    <properties>
      <property name="javax.persistence.jdbc.url" value="jdbc:h2:./mibasededatos.h2db"/>
      <property name="javax.persistence.jdbc.user" value=""/>
      <property name="javax.persistence.jdbc.driver" value="org.h2.Driver"/>
      <property name="javax.persistence.jdbc.password" value=""/>
      <property name="javax.persistence.schema-generation.database.action" value="create"/>
    </properties>
  </persistence-unit>
</persistence>
<!--
La unidad de persistencia incluye qué objetos serán persistentes -> Estos objetos los llmaremos entidades.
La unidad de persistencia incluye dónde persistirá la información -> En qué base de datos.
La unidad de persistencia incluye qué proveedor de persistencia usará.

Esta información se indicará en dos lugares. El primer lugar en el archivo persistence.xml donde indicaremos parte de la información y el resto en nuestro código Java.
Cada unidad de persistencia tendrá su propia sección en el archivo de configuración persistence.xml
Cada unidad de persistencia va definida con la etiqueta <persistence-unit>...</persistence-unit>

Una aplicación puede necesitar trabajar con datos de diferentes orígenes, por ejemplo, de diferentes bases de datos. Es por ello que podemos tener varias unidades de persistencia en un mismo archivo persistence.xml


-->